---

- name: container kernel module management
  block:
  - name: Create the modules-load.d folder for lustre.conf
    ansible.builtin.file:
      path: /etc/modules-load.d/
      state: directory
      mode: '0755'
  - name: Create the modprobe.d folder for lustre.conf
    ansible.builtin.file:
      path: /etc/modprobe.d/
      state: directory
      mode: '0755'
  - name: Ensure lnet service is enabled
    ansible.builtin.systemd:
      name: lnet
      enabled: true
    tags: ['notest']
  when:  ('chroot' in ansible_connection)  or ('docker' in ansible_connection ) or ( 'podman' in ansible_connection )
  tags: ['lustre']

- name: Lustre modprobe.d confings
  ansible.builtin.template:
    src: lustre.conf.j2
    dest: /etc/modprobe.d/lustre.conf
    owner: root
    group: root
    mode: 0644
  when: ( lustre_lnet_networks is defined or lustre_modprobe_options is defined )
  tags: ['lustre']



- name: live server kernel module management
  block:
  - name: Add kernel module lustre ( live server )
    community.general.modprobe:
      name: lustre
      state: present
      persistent: present
    tags: ['notest','lustre']

  - name: Ensure lnet service is enabled and running
    ansible.builtin.systemd:
      name: lnet
      state: started
      enabled: true
  when:  (not 'chroot' in ansible_connection)  and (not 'docker' in ansible_connection ) and (not 'podman' in ansible_connection )


- name: Create the mount-lustre.sh script
  ansible.builtin.template:
    src: mount-lustre.sh.j2
    dest: /usr/local/sbin/mount-lustre.sh
    owner: root
    group: root
    mode: 0744
  #when: ( lustre_lnet_networks is defined or lustre_modprobe_options is defined )
  tags: ['lustre']

- name: Create the system service lustre-mount.service
  ansible.builtin.template:
    src: lustre-mount.service.j2
    dest: /etc/systemd/system/lustre-mount.service
    owner: root
    group: root
    mode: 0644
  #when: ( lustre_lnet_networks is defined or lustre_modprobe_options is defined )
  tags: ['lustre']

- name: Create the poll_ib_stat.sh script
  ansible.builtin.template:
    src: poll_ib_stat.sh.j2
    dest: /usr/local/sbin/poll_ib_stat.sh
    owner: root
    group: root
    mode: 0744
  #when: ( lustre_lnet_networks is defined or lustre_modprobe_options is defined )
  tags: ['lustre']

- name: Create the system service infinibandup.service
  ansible.builtin.template:
    src: inifinibandup.service.j2
    dest: /etc/systemd/system/inifinibandup.service
    owner: root
    group: root
    mode: 0644
  #when: ( lustre_lnet_networks is defined or lustre_modprobe_options is defined )
  tags: ['lustre']

- name: Ensure lustre-mount.service is enabled
  ansible.builtin.systemd:
    name: lustre-mount.service
    enabled: true


- name: Ensure directory exists for lnet.service.d/override.conf
  ansible.builtin.file:
    path: /etc/systemd/system/lnet.service.d
    state: directory
    mode: 0755
    owner: root
    group: root

- name: Create the systemd lnet.service.d/override.conf
  ansible.builtin.template:
    src: lnet.service.d_override.conf.j2
    dest: /etc/systemd/system/lnet.service.d/override.conf
    owner: root
    group: root
    mode: 0644
  #when: ( lustre_lnet_networks is defined or lustre_modprobe_options is defined )
  tags: ['lustre']


- name: Create the mount target directory if it does not exist
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: directory
    mode: '0755'
  loop: "{{ lustre_mounts }}"
  when: lustre_mounts is defined
  tags: ['lustre']


- name: Add Lustre entry to /etc/fstab, make sure it is mounted
  ansible.posix.mount:
    fstype: lustre
    path: "{{ item.path }}"
    src: "{{ item.src }}"
    opts: "{{ item.opts | default(lustre_mount_opts) | join(',') }}"
    state: "{{ lustre_mount_state }}"
  loop: "{{ lustre_mounts }}"
  when: lustre_mounts is defined
  tags: ['notest','lustre']
